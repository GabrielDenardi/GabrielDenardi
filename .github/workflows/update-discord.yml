name: Atualiza Discord Presence no README

permissions:
  contents: write

on:
  schedule:
    - cron: '*/10 * * * *'  # a cada 10 minutos (ou ajuste)
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Busca status no Lanyard
        run: |
          curl -s "https://api.lanyard.rest/v1/users/${{ secrets.DISCORD_ID }}" > status.json

      - name: Gera snippet Markdown
        id: snippet
        run: |
          ACT=$(jq -r '
            .data.activities[]
            | select(.type==0)            # tipo “Jogando/Listening/etc”
            | .assets
            | "**\(.state // "Sem status")** — " +
              "![L](https://cdn.discordapp.com/app-assets/\(.application_id)/\(.large_image).png) " +
              "![S](https://cdn.discordapp.com/app-assets/\(.application_id)/\(.small_image).png)"
          ' status.json)
          # Escapa _ e coloca entre markers
          echo "snippet<<EOF" >> $GITHUB_OUTPUT
          echo "<!-- START DISCORD -->"      >> $GITHUB_OUTPUT
          echo "$ACT"                        >> $GITHUB_OUTPUT
          echo "<!-- END DISCORD -->"        >> $GITHUB_OUTPUT
          echo "EOF"                         >> $GITHUB_OUTPUT

      - name: Injeta no README
        run: |
          # substitui tudo entre START e END pelo snippet gerado
          SNIPPET="${{ steps.snippet.outputs.snippet }}"
          awk -v s="$SNIPPET" '
            /<!-- START DISCORD -->/ { print s; f=1; next }
            /<!-- END DISCORD -->/   { f=0 }
            !f
          ' README.md > README.tmp.md
          mv README.tmp.md README.md

      - name: Commit e Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "ci: atualiza Discord Presence" || echo "Nada a commitar"
          git push
